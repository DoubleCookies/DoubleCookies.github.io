export const ru = {
    wikiWamLog: {
        wamIntroStart: 'WAM (Wiki Activity Monitor) — рейтинг крупнейших википроектов на FANDOM\'е. ' +
            'Каждой вики на основе различных (и неизвестных) параметров проставлялся балл от 0 до 100 (больше — лучше), ' +
            'после чего составлялся рейтинг (который обновлялся каждый день).',
        wamIntroFinish: 'С помощью специальных скриптов я сохранил у себя значения рейтинга ' +
            'и построил графики на основе этих данных.',
        undertale: 'Undertale вики',
        geometryDash: 'Geometry Dash вики',
        stevenUniverse: 'Steven Universe вики',
        battleCats: 'The Battle Cats вики',
    },

    stringSwap: {
        intro: 'Преобразование текста для удобной работы на FANDOMе',
        replaceText: 'Замена текста',
        replaceTextInfo: 'Модуль для замены текста. Ничего лишнего!',
        addPrefix: 'Добавление префикса',
        addPrefixInfo: 'Модуль для добавления префикса в начале каждой строки.',
        fileNames: 'Список файлов',
        fileNamesInfo: 'Модуль для страницы неиспользуемых файлов. Позволяет вытащить нужные названия файлов, ' +
            'до которых сложно добраться иначе.',
        quoteReplacement: 'Замена кавычек',
        quoteReplacementInfo: 'Модуль для замены кавычек. Довольно простой (не учитывает вложенность).',
        navboxGenerator: 'Генератор навбоксов',
        navboxGeneratorInfo: 'Модуль для генерации ссылок для навбоксов.',
        galleryGenerator: 'Генератор галерей',
        galleryGeneratorInfo: 'Модуль для генерации списка файлов с нужным номером. Использовался раньше для ' +
            'галерей, сейчас немного утратил актуальность, но выкидывать не хочется.',

        startText: 'Исходный текст',
        resultText: 'Результат',
        find: 'Найти',
        replaceWith: 'Заменить на',
        prefix: 'Префикс',
        name: 'Название',
        startNumber: 'Старт. номер',
        finNumber: 'Фин. номер',
        extension: 'Расширение'
    },

    stats4wiki: {
        aboutTitle: "О чём этот проект?",
        aboutText: "В нём собираются данные по топ-50 самых скачиваемых и залайканных уровней в Geometry Dash " +
            "(как в целом, так и для категории \"демонических\" уровней), после чего формируется " +
            "таблица, которая затем размещается на Geometry Dash вики. Параллельно с этим генерируется " +
            "содержимое для пары шаблонов, которые используются в статьях про самые скачиваемые уровни. <1/>" +
            "В итоге получается своего рода полуавтоматическое обновление топов и шаблонов (и, как бонус, " +
            "на вики хранится история изменений этих топов).",
        workTitle: "Как он работает?",
        workList: "Всё довольно просто и последовательно:<1>" +
            "<0>Обращаемся к серверам Geometry Dash и получаем страницу (10 уровней). В зависимости " +
            "от типа (кол-во скачиваний/лайков) формируем два набора уровней.</0>" +
            "<0>Останавливаемся в тот момент, когда в списке будет 50 демонов (при этом автоматически " +
            "выполняется условие, что у нас будет 50 любых уровней).</0>" +
            "<0>Из каждого списка формируем ещё два — для всех видов уровней и только для демонов.</0>" +
            "<0>Каждый список переводим в текстовый формат (с учётом различных нюансов по типу шаблонов " +
            "сложности, наличия или отсутствия ссылок, разделителей и т. д.)</0>" +
            "<0>Формируем текст для шаблонов и также сохраняем.</0>" +
            "<0><2>Готово!</2></0>" +
            "</1>",
        plansTitle: "Есть ли планы на будущее?",
        plansList: "<0><1>Можно будет пройтись по старым коммитам, собрать информацию по прошлым месяцам/годам " +
            "и построить сводную табличку/график/<2>другую штуку</2>.</1>" +
            "<1>Добавить иллюстраций. Все же любят картинки?</1></0>",
    },

    gdStatistics: {
        aboutTitle: "Что это такое?",
        aboutText: "Этот проект посвящён сбору статистики по уровням в Geometry Dash — сколько раз " +
            "уровень был скачан, лайкнут, кем он был создан, какой трек использовался и т. д. " +
            "После этого все результаты заносятся в различные " +
            "таблицы.. и всё!",

        locationTitle: "Где можно найти?",
        locationText: "Посмотреть на данные можно <1>тут</1>.",

        workTitle: "Как он работает?",
        workList: "Всё довольно просто и последовательно:<1>" +
            "<0>Обращаемся к серверам Geometry Dash и получаем страницу (10 featured-уровней). После этого " +
            "продолжаем получать страницы с уровнями до тех пор, пока они не закончатся.</0>" +
            "<0>На основе списка featured-уровней формируем отдельный список epic-уровней (так как они " +
            "автоматически являются featured — мы ничего не упустим).</0>" +
            "<0>Манипулируя списками формируем различные новые списки — по сложностям, по кол-ву " +
            "использований саундтреков, по кол-ву уровней у определенных игроков, и т. д.</0>" +
            "<0>Сохраняем списки в отдельные файлы.</0>" +
            "<0><2>Готово!</2></0>" +
            "</1>",
        plansTitle: "Есть ли планы на будущее?",
        plansList: "<0>" +
            "<1>Можно будет пройтись по старым коммитам, собрать информацию по прошлым месяцам/годам " +
            "и построить сводную табличку/график/<2>другую штуку</2>.</1>" +
            "<1>Добавить иллюстраций. Все же любят картинки?</1>" +
            "</0>",
    }
}

export default ru;